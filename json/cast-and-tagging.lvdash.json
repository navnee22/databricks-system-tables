{
  "datasets": [
    {
      "name": "aa460ccc",
      "displayName": "Billing Timeline",
      "query": "WITH compute AS (\nSELECT\n  c.cluster_name,\n  CASE\n    WHEN c.cluster_name LIKE 'job-%' THEN 'Job Cluster'\n    WHEN c.cluster_name LIKE 'dlt-%' THEN 'DLT Pipeline'\n    ELSE 'Adhoc Cluster'\n  END AS cluster_type,\n  CASE\n    WHEN c.cluster_name LIKE 'job-%' THEN regexp_extract(c.cluster_name, '^job-(\\\\d+)-')\n    WHEN c.cluster_name LIKE 'dlt-%' THEN regexp_extract(c.cluster_name, '^dlt-(\\\\d+)-')\n    ELSE NULL\n  END AS job_or_pipeline_id,\n  c.*\nFROM system.compute.clusters c\n),\n \npx_all AS (\n  SELECT DISTINCT\n  sku_name, \n  pricing.default AS unit_price,\n  CASE \n  WHEN sku_name LIKE ('%ALL_PURPOSE%') THEN (unit_price::float * (1-0.0)::float)::float -- Input SKU level discounts here\n  WHEN sku_name LIKE ('%DLT%') THEN (unit_price::float * (1-0.0)::float)::float -- Input SKU level discounts here\n  WHEN sku_name LIKE ('%JOBS%') THEN (unit_price::float * (1-0.0)::float)::float -- Input SKU level discounts here\n  WHEN sku_name LIKE ('%SQL%') THEN (unit_price::float * (1-0.0)::float)::float -- Input SKU level discounts here\n  ELSE unit_price::float\n  END AS sku_price\n  FROM system.billing.list_prices \n  QUALIFY ROW_NUMBER() OVER (PARTITION BY sku_name ORDER BY price_start_time DESC) = 1\n\n  ),\n\n-- Now tag combos can be matched in 2 separate ways: key only, or the key=value pair if optionall provided\nparsed_tagging_table AS (\n    WITH split_data AS (\n      SELECT \n        split(regexp_replace(:tagging_raw_architecture, '\\\\s+', ''), ';') AS kv_pairs\n    ),\n    exploded_data AS (\n      SELECT \n        monotonically_increasing_id() AS order_id,\n        explode(kv_pairs) AS kv_pair\n      FROM \n        split_data\n    ),\n    clean_keys AS (\n\n      SELECT \n        split(kv_pair, '=')[0] AS key,\n        COALESCE(split(kv_pair, '=')[1], '') AS value,\n        kv_pair AS combination,\n        CASE WHEN contains(kv_pair, '=') THEN 1 ELSE 0 END AS ContainsValuePair\n      FROM \n        exploded_data\n    ),\n\n    aggregated_data AS (\n      SELECT \n        collect_list(key) as keys,\n        collect_list(value) as values, \n        collect_list(CASE WHEN ContainsValuePair = 1 THEN combination END) as KVCombos\n      FROM \n        clean_keys\n    ),\n\n    clean_aggs AS (\n    SELECT \n      map_from_arrays(keys, values) AS result_map,\n      KVCombos\n    FROM \n      aggregated_data LIMIT 1\n    )\n\n    SELECT \n    -- map with only keys\n    MAP_FILTER(result_map, (key, value) -> value = '') AS filtered_map,\n    -- entries that need to match both key and value pairs\n    KVCombos\n    FROM clean_aggs\n)\n\n-- Final Select\nSELECT \nu.*,\nc.*,\nu.workspace_id AS clean_workspace_id,\n-- Calcualte LIST Prices (unless discounts are baked in above in px_all table)\nsku_price*usage_quantity AS Dollar_DBUs,\n-- Clean up cluster / warehouse ids from all places\nCOALESCE(c.cluster_id, u.usage_metadata.cluster_id, usage_metadata.warehouse_id) AS clean_cluster_id,\nCOALESCE(c.job_or_pipeline_id, u.usage_metadata.job_id, u.usage_metadata.dlt_pipeline_id, 'Adhoc Or Serving') AS clean_job_or_pipeline_id,\n\nCASE WHEN u.sku_name LIKE ('%SERVERLESS%') OR u.product_features.is_serverless = 'true' THEN 'Serverless' ELSE 'Self-hosted' END AS IsServerless,\n-- Tagging Policy Identification and Enforcement\n\n-- Get Total Keys Required\n-- Now tag combos can be matched in 2 separate ways: key only, or the key=value pair if optionall provided\n\n(SELECT MAX(size(map_keys(filtered_map)) + size(KVCombos)) FROM parsed_tagging_table) AS TotalPolicyTags,\n\n-- When only keys are provided, link keys, but when result_map has a value, check the set of the whole k=v pair\n(\n  ARRAY_DISTINCT(\n      CONCAT(\n          array_intersect(map_keys(u.custom_tags), (SELECT MAX(map_keys(filtered_map)) FROM parsed_tagging_table)) \n          ,array_intersect(\n              TRANSFORM(\n              MAP_KEYS(custom_tags),\n              key -> CONCAT(key, '=', custom_tags[key])\n            ), (SELECT MAX(KVCombos) FROM parsed_tagging_table)\n                          )\n            )\n  )\n) AS CompliantTagKeys,\n\narray_except((SELECT MAX(map_keys(filtered_map)) FROM parsed_tagging_table), map_keys(u.custom_tags)) AS MissingTagKeys,\nsize(CompliantTagKeys) AS NumberOfCompliantKeys,\narray_join(CompliantTagKeys, '_') AS TagPolicyKeys,\n\narray_join(\n  CONCAT(transform(CompliantTagKeys, key -> CONCAT(key, '=', u.custom_tags[key])), -- Get Compliant keys without value pair\n  FILTER(CompliantTagKeys, x -> POSITION('=' IN x) > 0) -- Pull out the compliant values with the key pair\n  )\n  , ';') AS CompliantValues,\n\nCASE WHEN NumberOfCompliantKeys >= TotalPolicyTags THEN 'Compliant' ELSE 'Not Compliant To Tag Policy' END AS IsTaggingCompliant\nFROM system.billing.usage AS u\nINNER JOIN px_all AS px ON px.sku_name = u.sku_name\nLEFT JOIN compute AS c\n    ON (c.cluster_id = u.usage_metadata.cluster_id\n        AND (   (c.job_or_pipeline_id = u.usage_metadata.job_id)\n                OR (c.job_or_pipeline_id = u.usage_metadata.dlt_pipeline_id)\n                OR (c.job_or_pipeline_id = 'Adhoc')\n            )\n    )",
      "parameters": [
        {
          "displayName": "tagging_raw_architecture",
          "keyword": "tagging_raw_architecture",
          "dataType": "STRING",
          "defaultSelection": {
            "values": {
              "dataType": "STRING",
              "values": [{ "value": "env;system" }]
            }
          }
        }
      ]
    },
    {
      "name": "52aae459",
      "displayName": "Billing Momentum Indicators",
      "query": "/*\nThis query actually filters on the same tagging framework as the other query as well as date range and product category \nand trends trailing usage metrics as well as moving averages for them\n*/\n\n\nWITH px_all AS (\n  SELECT DISTINCT\n  sku_name,\n  pricing.default AS unit_price,\n  CASE \n  WHEN sku_name LIKE ('%ALL_PURPOSE%') THEN (unit_price::float * (1-0.0)::float)::float -- Input SKU level discounts here\n  WHEN sku_name LIKE ('%DLT%') THEN (unit_price::float * (1-0.0)::float)::float -- Input SKU level discounts here\n  WHEN sku_name LIKE ('%JOBS%') THEN (unit_price::float * (1-0.0)::float)::float -- Input SKU level discounts here\n  WHEN sku_name LIKE ('%SQL%') THEN (unit_price::float * (1-0.0)::float)::float -- Input SKU level discounts here\n  ELSE unit_price::float\n  END AS sku_price\n  FROM system.billing.list_prices \n  QUALIFY ROW_NUMBER() OVER (PARTITION BY sku_name ORDER BY price_start_time DESC) = 1\n  ),\n\n\n-- Now tag combos can be matched in 2 separate ways: key only, or the key=value pair if optionall provided\nparsed_tagging_table AS (\n    WITH split_data AS (\n      SELECT \n        split(regexp_replace(:tagging_raw_architecture, '\\\\s+', ''), ';') AS kv_pairs\n    ),\n    exploded_data AS (\n      SELECT \n        monotonically_increasing_id() AS order_id,\n        explode(kv_pairs) AS kv_pair\n      FROM \n        split_data\n    ),\n    clean_keys AS (\n\n      SELECT \n        split(kv_pair, '=')[0] AS key,\n        COALESCE(split(kv_pair, '=')[1], '') AS value,\n        kv_pair AS combination,\n        CASE WHEN contains(kv_pair, '=') THEN 1 ELSE 0 END AS ContainsValuePair\n      FROM \n        exploded_data\n    ),\n\n    aggregated_data AS (\n      SELECT \n        collect_list(key) as keys,\n        collect_list(value) as values, \n        collect_list(CASE WHEN ContainsValuePair = 1 THEN combination END) as KVCombos\n      FROM \n        clean_keys\n    ),\n\n    clean_aggs AS (\n    SELECT \n      map_from_arrays(keys, values) AS result_map,\n      KVCombos\n    FROM \n      aggregated_data LIMIT 1\n    )\n\n    SELECT \n    -- map with only keys\n    MAP_FILTER(result_map, (key, value) -> value = '') AS filtered_map,\n    -- entries that need to match both key and value pairs\n    KVCombos\n    FROM clean_aggs\n),\n\n\nfiltered_usage AS (\n  SELECT u.*,\n  usage_quantity*px.sku_price AS DollarDBUs,\n\n  -- Custom Tagging Filtering System\n  (SELECT MAX(size(map_keys(filtered_map)) + size(KVCombos)) FROM parsed_tagging_table) AS TotalPolicyTags,\n\n  -- When only keys are provided, link keys, but when result_map has a value, check the set of the whole k=v pair\n  (\n    ARRAY_DISTINCT(\n        CONCAT(\n            array_intersect(map_keys(u.custom_tags), (SELECT MAX(map_keys(filtered_map)) FROM parsed_tagging_table)) \n            ,array_intersect(\n                TRANSFORM(\n                MAP_KEYS(custom_tags),\n                key -> CONCAT(key, '=', custom_tags[key])\n              ), (SELECT MAX(KVCombos) FROM parsed_tagging_table)\n                            )\n              )\n    )\n  ) AS CompliantTagKeys,\n\n  array_except((SELECT MAX(map_keys(filtered_map)) FROM parsed_tagging_table), map_keys(u.custom_tags)) AS MissingTagKeys,\n  size(CompliantTagKeys) AS NumberOfCompliantKeys,\n  array_join(CompliantTagKeys, '_') AS TagPolicyKeys,\n\n  array_join(\n    CONCAT(transform(CompliantTagKeys, key -> CONCAT(key, '=', u.custom_tags[key])), -- Get Compliant keys without value pair\n    FILTER(CompliantTagKeys, x -> POSITION('=' IN x) > 0) -- Pull out the compliant values with the key pair\n    )\n    , ';') AS CompliantValues,\n\n  CASE \n  WHEN length(:tagging_raw_architecture) = 0 OR :tagging_raw_architecture IS NULL OR :tagging_raw_architecture = 'all' THEN 'Compliant'\n  WHEN NumberOfCompliantKeys >= TotalPolicyTags \n    THEN 'Compliant' \n  ELSE 'Not Compliant To Tag Policy' END AS IsTaggingCompliant\n  FROM system.billing.usage u\n  INNER JOIN px_all px ON px.sku_name = u.sku_name\n    WHERE \n    -- Date Filter\n    usage_date BETWEEN :usage_start AND :usage_end\n    AND \n    -- Product Filter\n    (CASE WHEN :product_category = 'all' THEN 1=1 ELSE\n       ARRAY_CONTAINS(split(lower(:product_category), ';'), lower(u.billing_origin_product))\n       END)\n\n),\n\nclean_usage AS (\n    SELECT usage_date, SUM(usage_quantity) AS DBUs, \n    SUM(DollarDBUs) AS DollarDBUs,\n    ROW_NUMBER() OVER (ORDER BY usage_date DESC) AS rn\n    FROM filtered_usage u\n    WHERE IsTaggingCompliant = 'Compliant'\n    GROUP BY usage_date\n)\n\n-- Final Query\nSELECT\n    usage_date,\n    DollarDBUs,\n\n    AVG(DollarDBUs) OVER (\n        ORDER BY usage_date\n        ROWS BETWEEN 6 PRECEDING AND CURRENT ROW\n    ) AS avg_7d,\n    AVG(DollarDBUs) OVER (\n        ORDER BY usage_date\n        ROWS BETWEEN 29 PRECEDING AND CURRENT ROW\n    ) AS avg_30d,\n    AVG(DollarDBUs) OVER (\n        ORDER BY usage_date\n        ROWS BETWEEN 89 PRECEDING AND CURRENT ROW\n    ) AS avg_90d,\n    AVG(DollarDBUs) OVER (\n        ORDER BY usage_date\n        ROWS BETWEEN 364 PRECEDING AND CURRENT ROW\n    ) AS avg_365d\nFROM -- Roll up to daily level, keep nice a simple for OOTB use cases\n    (SELECT usage_date, SUM(usage_quantity) AS DBUs, \n    SUM(DollarDBUs) AS DollarDBUs,\n    ROW_NUMBER() OVER (ORDER BY usage_date DESC) AS rn\n    FROM filtered_usage u\n    WHERE IsTaggingCompliant = 'Compliant'\n    GROUP BY usage_date\n    )\n-- Optional, depending on your needs: WHERE clause to filter rows\nORDER BY\n    usage_date;",
      "parameters": [
        {
          "displayName": "tag_keys",
          "keyword": "tagging_raw_architecture",
          "dataType": "STRING",
          "defaultSelection": {
            "values": {
              "dataType": "STRING",
              "values": [{ "value": "demo;project=dbdemos" }]
            }
          }
        },
        {
          "displayName": "usage_start",
          "keyword": "usage_start",
          "dataType": "DATETIME",
          "defaultSelection": {
            "values": {
              "dataType": "DATETIME",
              "values": [{ "value": "2024-04-14T21:21:45.000" }]
            }
          }
        },
        {
          "displayName": "usage_end",
          "keyword": "usage_end",
          "dataType": "DATETIME",
          "defaultSelection": {
            "values": {
              "dataType": "DATETIME",
              "values": [{ "value": "2024-04-21T21:21:48.000" }]
            }
          }
        },
        {
          "displayName": "product_category",
          "keyword": "product_category",
          "dataType": "STRING",
          "defaultSelection": {
            "values": { "dataType": "STRING", "values": [{ "value": "all" }] }
          }
        }
      ]
    },
    {
      "name": "e81fb342",
      "displayName": "Trailing Billing Summary",
      "query": "/*\nThis query actually filters on the same tagging framework as the other query as well as date range and product category \nand trends trailing usage metrics as well as moving averages for them\n*/\n\n\nWITH px_all AS (\n  SELECT DISTINCT\n  sku_name,\n  pricing.default AS unit_price,\n  CASE \n  WHEN sku_name LIKE ('%ALL_PURPOSE%') THEN (unit_price::float * (1-0.0)::float)::float -- Input SKU level discounts here\n  WHEN sku_name LIKE ('%DLT%') THEN (unit_price::float * (1-0.0)::float)::float -- Input SKU level discounts here\n  WHEN sku_name LIKE ('%JOBS%') THEN (unit_price::float * (1-0.0)::float)::float -- Input SKU level discounts here\n  WHEN sku_name LIKE ('%SQL%') THEN (unit_price::float * (1-0.0)::float)::float -- Input SKU level discounts here\n  ELSE unit_price::float\n  END AS sku_price\n  FROM system.billing.list_prices \n  QUALIFY ROW_NUMBER() OVER (PARTITION BY sku_name ORDER BY price_start_time DESC) = 1\n  ),\n\n\n-- Now tag combos can be matched in 2 separate ways: key only, or the key=value pair if optionall provided\nparsed_tagging_table AS (\n    WITH split_data AS (\n      SELECT \n        split(regexp_replace(:tagging_raw_architecture, '\\\\s+', ''), ';') AS kv_pairs\n    ),\n    exploded_data AS (\n      SELECT \n        monotonically_increasing_id() AS order_id,\n        explode(kv_pairs) AS kv_pair\n      FROM \n        split_data\n    ),\n    clean_keys AS (\n\n      SELECT \n        split(kv_pair, '=')[0] AS key,\n        COALESCE(split(kv_pair, '=')[1], '') AS value,\n        kv_pair AS combination,\n        CASE WHEN contains(kv_pair, '=') THEN 1 ELSE 0 END AS ContainsValuePair\n      FROM \n        exploded_data\n    ),\n\n    aggregated_data AS (\n      SELECT \n        collect_list(key) as keys,\n        collect_list(value) as values, \n        collect_list(CASE WHEN ContainsValuePair = 1 THEN combination END) as KVCombos\n      FROM \n        clean_keys\n    ),\n\n    clean_aggs AS (\n    SELECT \n      map_from_arrays(keys, values) AS result_map,\n      KVCombos\n    FROM \n      aggregated_data LIMIT 1\n    )\n\n    SELECT \n    -- map with only keys\n    MAP_FILTER(result_map, (key, value) -> value = '') AS filtered_map,\n    -- entries that need to match both key and value pairs\n    KVCombos\n    FROM clean_aggs\n),\n\n\nfiltered_usage AS (\n  SELECT u.*,\n  usage_quantity*px.sku_price AS DollarDBUs,\n\n  -- Custom Tagging Filtering System\n  (SELECT MAX(size(map_keys(filtered_map)) + size(KVCombos)) FROM parsed_tagging_table) AS TotalPolicyTags,\n\n  -- When only keys are provided, link keys, but when result_map has a value, check the set of the whole k=v pair\n  (\n    ARRAY_DISTINCT(\n        CONCAT(\n            array_intersect(map_keys(u.custom_tags), (SELECT MAX(map_keys(filtered_map)) FROM parsed_tagging_table)) \n            ,array_intersect(\n                TRANSFORM(\n                MAP_KEYS(custom_tags),\n                key -> CONCAT(key, '=', custom_tags[key])\n              ), (SELECT MAX(KVCombos) FROM parsed_tagging_table)\n                            )\n              )\n    )\n  ) AS CompliantTagKeys,\n\n  array_except((SELECT MAX(map_keys(filtered_map)) FROM parsed_tagging_table), map_keys(u.custom_tags)) AS MissingTagKeys,\n  size(CompliantTagKeys) AS NumberOfCompliantKeys,\n  array_join(CompliantTagKeys, '_') AS TagPolicyKeys,\n\n  array_join(\n    CONCAT(transform(CompliantTagKeys, key -> CONCAT(key, '=', u.custom_tags[key])), -- Get Compliant keys without value pair\n    FILTER(CompliantTagKeys, x -> POSITION('=' IN x) > 0) -- Pull out the compliant values with the key pair\n    )\n    , ';') AS CompliantValues,\n\n  CASE \n  WHEN length(:tagging_raw_architecture) = 0 OR :tagging_raw_architecture IS NULL OR :tagging_raw_architecture = 'all' THEN 'Compliant'\n  WHEN NumberOfCompliantKeys >= TotalPolicyTags \n    THEN 'Compliant' \n  ELSE 'Not Compliant To Tag Policy' END AS IsTaggingCompliant\n  FROM system.billing.usage u\n  INNER JOIN px_all px ON px.sku_name = u.sku_name\n    WHERE \n    -- Date Filter\n    usage_date BETWEEN :usage_start AND :usage_end\n    AND \n    -- Product Filter\n    (CASE WHEN :product_category = 'all' THEN 1=1 ELSE\n       ARRAY_CONTAINS(split(lower(:product_category), ';'), lower(u.billing_origin_product))\n       END)\n\n),\n\nclean_usage AS (\n    SELECT usage_date, SUM(usage_quantity) AS DBUs, \n    SUM(DollarDBUs) AS DollarDBUs,\n    ROW_NUMBER() OVER (ORDER BY usage_date DESC) AS rn\n    FROM filtered_usage u\n    WHERE IsTaggingCompliant = 'Compliant'\n    GROUP BY usage_date\n),\n\nT7D_query AS (\n  (SELECT SUM(DollarDBUs) AS T7D FROM clean_usage WHERE rn <= 7)\n),\nT30D_query AS (\n  (SELECT SUM(DollarDBUs) AS T30D FROM clean_usage WHERE rn <= 30)\n),\nT90D_query AS (\n  (SELECT SUM(DollarDBUs) AS T90D FROM clean_usage WHERE rn <= 90)\n),\nT365D_query AS (\n  (SELECT SUM(DollarDBUs) AS T365D FROM clean_usage WHERE rn <= 365)\n)\n\n\n-- Final Query\nSELECT DISTINCT\n-- Calculate Trailing usage right here in subueries\n  (SELECT MAX(T7D) FROM T7D_query) AS T7D_Dollars,\n  (SELECT MAX(T30D) FROM T30D_query) AS T30D_Dollars,\n  (SELECT MAX(T90D) FROM T90D_query) AS T90D_Dollars,\n  (SELECT MAX(T365D) FROM T365D_query) AS T365D_Dollars,\n  try_divide(T7D_Dollars, 7) AS DailyAvgT7D,\n  try_divide(T30D_Dollars, 30) AS DailyAvgT30D,\n  try_divide(T90D_Dollars, 90) AS DailyAvgT90D,\n  try_divide(T365D_Dollars, 365) AS DailyAvgT365D\nLIMIT 1",
      "parameters": [
        {
          "displayName": "tagging_raw_architecture",
          "keyword": "tagging_raw_architecture",
          "dataType": "STRING",
          "defaultSelection": {
            "values": {
              "dataType": "STRING",
              "values": [{ "value": "demo;project=dbdemos" }]
            }
          }
        },
        {
          "displayName": "usage_start",
          "keyword": "usage_start",
          "dataType": "DATETIME",
          "defaultSelection": {
            "values": {
              "dataType": "DATETIME",
              "values": [{ "value": "2024-04-14T21:21:45.000" }]
            }
          }
        },
        {
          "displayName": "usage_end",
          "keyword": "usage_end",
          "dataType": "DATETIME",
          "defaultSelection": {
            "values": {
              "dataType": "DATETIME",
              "values": [{ "value": "2024-04-21T21:21:48.000" }]
            }
          }
        },
        {
          "displayName": "product_category",
          "keyword": "product_category",
          "dataType": "STRING",
          "defaultSelection": {
            "values": { "dataType": "STRING", "values": [{ "value": "all" }] }
          }
        }
      ]
    },
    {
      "name": "1e90a94f",
      "displayName": "Contract Burndown",
      "query": "WITH px_all AS (\n  SELECT DISTINCT\n  sku_name, \n  pricing.default AS unit_price,\n  CASE \n  WHEN sku_name LIKE ('%ALL_PURPOSE%') THEN (unit_price::float * (1-0.0)::float)::float -- Input SKU level discounts here\n  WHEN sku_name LIKE ('%DLT%') THEN (unit_price::float * (1-0.0)::float)::float -- Input SKU level discounts here\n  WHEN sku_name LIKE ('%JOBS%') THEN (unit_price::float * (1-0.0)::float)::float -- Input SKU level discounts here\n  WHEN sku_name LIKE ('%SQL%') THEN (unit_price::float * (1-0.0)::float)::float -- Input SKU level discounts here\n  ELSE unit_price::float\n  END AS sku_price\n  FROM system.billing.list_prices \n  QUALIFY ROW_NUMBER() OVER (PARTITION BY sku_name ORDER BY price_start_time DESC) = 1\n\n  ),\n\ncontract_dates AS (\n  SELECT \n  explode(days) AS usage_date\n  FROM (\n  SELECT sequence(:contract_start_date::date, :contract_end_date::date) AS days\n  )\n),\n\ncontract_burndown AS (\n  SELECT \n  *,\n  SUM(daily_amount) OVER (ORDER BY usage_date) AS cumulative_estimated_contract_usage,\n  try_divide(cumulative_estimated_contract_usage, total_contract_amount) AS estimated_contract_used\n  FROM (\n  SELECT\n    contract_dates.usage_date,\n    :contract_amount::float AS total_contract_amount,\n    (:contract_amount::float / (SELECT COUNT(0) FROM contract_dates)) AS daily_amount\n  FROM contract_dates\n  )\n),\n\ndaily_usage AS (\n    SELECT \n    u.usage_date,\n    SUM(sku_price*usage_quantity) AS DollarDBUs,\n    SUM(usage_quantity) AS DBUs\n    FROM system.billing.usage AS u\n    INNER JOIN px_all AS px ON px.sku_name = u.sku_name\n    GROUP BY u.usage_date\n),\n\nclean_burn AS (\n\nSELECT \nc.*,\nu.usage_date AS u_usage_date,\nu.DollarDBUs,\nu.DBUs,\nSUM(DollarDBUs) OVER (ORDER BY c.usage_date) AS cumulative_actual_spend,\ntry_divide(cumulative_actual_spend, total_contract_amount) AS actual_contract_used,\n-- % completion Flags\nCASE WHEN c.usage_date < current_date() \n  THEN 'Past Usage'\n  WHEN c.usage_date = current_date()\n  THEN 'Today'\n  WHEN c.usage_date > current_date() \n  THEN 'Future'\n  END AS TimePeriodFlag\nFROM contract_burndown c\nLEFT JOIN daily_usage u ON c.usage_date = u.usage_date\n),\n\nwith_flags AS (\nSELECT \n*,\nCASE WHEN usage_date >= current_date()\n      THEN current_date()::date\n      ELSE usage_date::date\n      END AS contract_active_date,\nCASE WHEN cumulative_actual_spend > cumulative_estimated_contract_usage\n    THEN 'Burning Above Run Rate'\n    ELSE 'Within Run Rate'\n    END AS RunRateFlag,\nCASE WHEN  cumulative_actual_spend <= total_contract_amount\n    THEN 'Within Contract'\n    ELSE 'Burst Usage'\n  END AS BurstFlag,\nMAX_BY(estimated_contract_used, usage_date)  FILTER (WHERE TimePeriodFlag != 'Future')*100 AS MostRecentEstimatedBurnProportion,\nMAX_BY(actual_contract_used, usage_date)  FILTER (WHERE TimePeriodFlag != 'Future')*100 AS MostRecentActualBurnProportion\nFROM clean_burn\nGROUP BY ALL\n)\n\nSELECT \n*\nFROM with_flags \nWHERE u_usage_date IS NOT NULL -- Will not look into future past current usage\n",
      "parameters": [
        {
          "displayName": "contract_start_date",
          "keyword": "contract_start_date",
          "dataType": "DATE",
          "defaultSelection": {
            "values": {
              "dataType": "DATE",
              "values": [{ "value": "2023-05-01T00:00:00.000" }]
            }
          }
        },
        {
          "displayName": "contract_end_date",
          "keyword": "contract_end_date",
          "dataType": "DATE",
          "defaultSelection": {
            "values": {
              "dataType": "DATE",
              "values": [{ "value": "2024-04-30T00:00:00.000" }]
            }
          }
        },
        {
          "displayName": "contract_amount",
          "keyword": "contract_amount",
          "dataType": "DECIMAL",
          "defaultSelection": {
            "values": {
              "dataType": "DECIMAL",
              "values": [{ "value": "1000000" }]
            }
          }
        }
      ]
    }
  ],
  "pages": [
    {
      "name": "dbdcd719",
      "displayName": "New Page",
      "layout": [
        {
          "widget": {
            "name": "934ebade",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    {
                      "name": "billing_origin_product",
                      "expression": "`billing_origin_product`"
                    },
                    {
                      "name": "daily(usage_date)",
                      "expression": "DATE_TRUNC(\"DAY\", `usage_date`)"
                    },
                    {
                      "name": "sum(Dollar_DBUs)",
                      "expression": "SUM(`Dollar_DBUs`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "daily(usage_date)",
                  "scale": { "type": "temporal" },
                  "displayName": "usage_date"
                },
                "y": {
                  "fieldName": "sum(Dollar_DBUs)",
                  "scale": { "type": "quantitative" },
                  "axis": { "title": "Usage ( $ DBUs)" },
                  "displayName": "$ DBUs"
                },
                "color": {
                  "fieldName": "billing_origin_product",
                  "scale": {
                    "type": "categorical",
                    "mappings": [
                      { "value": "Delta Live Tables", "color": "#7805c6" },
                      { "value": "All Purpose", "color": "#00A972" },
                      { "value": "Model Serving", "color": "#2c62eb" },
                      { "value": "Jobs", "color": "#077A9D" },
                      { "value": "ALL_PURPOSE", "color": "#1356d4" }
                    ]
                  },
                  "legend": { "title": "Category", "position": "bottom" },
                  "displayName": "Category"
                },
                "label": { "show": false }
              },
              "frame": { "showTitle": true, "title": "Spend By Category" }
            }
          },
          "position": { "x": 0, "y": 13, "width": 6, "height": 6 }
        },
        {
          "widget": {
            "name": "3e0831eb",
            "queries": [
              {
                "name": "dashboards/01eeed27c1e41344b1a06cd65ca8285c/datasets/01eeffb505f316c6bd35a4e4a020cee6_daily(usage_date)",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    {
                      "name": "daily(usage_date)",
                      "expression": "DATE_TRUNC(\"DAY\", `usage_date`)"
                    },
                    {
                      "name": "daily(usage_date)_associativity",
                      "expression": "COUNT_IF(`associative_filter_predicate_group`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "filter-date-range-picker",
              "encodings": {
                "fields": [
                  {
                    "fieldName": "daily(usage_date)",
                    "displayName": "usage_date",
                    "queryName": "dashboards/01eeed27c1e41344b1a06cd65ca8285c/datasets/01eeffb505f316c6bd35a4e4a020cee6_daily(usage_date)"
                  }
                ]
              },
              "frame": { "showTitle": true, "title": "Usage Date" }
            }
          },
          "position": { "x": 0, "y": 2, "width": 2, "height": 2 }
        },
        {
          "widget": {
            "name": "06182ed3",
            "textbox_spec": "# Billing Advisor Dashboard\n\n#### Section 1 - Billing Advisor - See where your costs are going\n#### Section 2- Contract Monitor - Check Actual Usage Against Estimated Contract Burndown\n#### Section 3 - Tagging Manager - Implement, Audit, and Enforce Tagging Policies across all compute\n#### Section 4 - Billing Momentum & Trends Analysis With Custom Tagging Filters\n-----"
          },
          "position": { "x": 0, "y": 0, "width": 6, "height": 2 }
        },
        {
          "widget": {
            "name": "29c4a587",
            "queries": [
              {
                "name": "dashboards/01eeed27c1e41344b1a06cd65ca8285c/datasets/01eeffb505f316c6bd35a4e4a020cee6_sku_name",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    { "name": "sku_name", "expression": "`sku_name`" },
                    {
                      "name": "sku_name_associativity",
                      "expression": "COUNT_IF(`associative_filter_predicate_group`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "filter-multi-select",
              "encodings": {
                "fields": [
                  {
                    "fieldName": "sku_name",
                    "displayName": "sku_name",
                    "queryName": "dashboards/01eeed27c1e41344b1a06cd65ca8285c/datasets/01eeffb505f316c6bd35a4e4a020cee6_sku_name"
                  }
                ]
              },
              "frame": { "showTitle": true, "title": "SKU" }
            }
          },
          "position": { "x": 2, "y": 2, "width": 1, "height": 2 }
        },
        {
          "widget": {
            "name": "47d2451f",
            "queries": [
              {
                "name": "dashboards/01eeed27c1e41344b1a06cd65ca8285c/datasets/01eeffb505f316c6bd35a4e4a020cee6_billing_origin_product",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    {
                      "name": "billing_origin_product",
                      "expression": "`billing_origin_product`"
                    },
                    {
                      "name": "billing_origin_product_associativity",
                      "expression": "COUNT_IF(`associative_filter_predicate_group`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "filter-multi-select",
              "encodings": {
                "fields": [
                  {
                    "fieldName": "billing_origin_product",
                    "displayName": "billing_origin_product",
                    "queryName": "dashboards/01eeed27c1e41344b1a06cd65ca8285c/datasets/01eeffb505f316c6bd35a4e4a020cee6_billing_origin_product"
                  }
                ]
              },
              "frame": { "showTitle": true, "title": "Product Category" }
            }
          },
          "position": { "x": 3, "y": 2, "width": 1, "height": 2 }
        },
        {
          "widget": {
            "name": "e564ef39",
            "queries": [
              {
                "name": "dashboards/01eeed27c1e41344b1a06cd65ca8285c/datasets/01eeffb505f316c6bd35a4e4a020cee6_IsServerless",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    { "name": "IsServerless", "expression": "`IsServerless`" },
                    {
                      "name": "IsServerless_associativity",
                      "expression": "COUNT_IF(`associative_filter_predicate_group`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "filter-multi-select",
              "encodings": {
                "fields": [
                  {
                    "fieldName": "IsServerless",
                    "displayName": "IsServerless",
                    "queryName": "dashboards/01eeed27c1e41344b1a06cd65ca8285c/datasets/01eeffb505f316c6bd35a4e4a020cee6_IsServerless"
                  }
                ]
              },
              "frame": { "showTitle": true, "title": "Serverless?" }
            }
          },
          "position": { "x": 5, "y": 2, "width": 1, "height": 2 }
        },
        {
          "widget": {
            "name": "04f67703",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    {
                      "name": "daily(usage_date)",
                      "expression": "DATE_TRUNC(\"DAY\", `usage_date`)"
                    },
                    { "name": "sku_name", "expression": "`sku_name`" },
                    {
                      "name": "sum(Dollar_DBUs)",
                      "expression": "SUM(`Dollar_DBUs`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "daily(usage_date)",
                  "scale": { "type": "temporal" },
                  "displayName": "usage_date"
                },
                "y": {
                  "fieldName": "sum(Dollar_DBUs)",
                  "scale": { "type": "quantitative" },
                  "displayName": "Usage ($ DBUs)"
                },
                "color": {
                  "fieldName": "sku_name",
                  "scale": {
                    "type": "categorical",
                    "mappings": [
                      { "value": "Delta Live Tables", "color": "#0567c6" },
                      {
                        "value": "ENTERPRISE_ALL_PURPOSE_COMPUTE",
                        "color": "#1356d4"
                      }
                    ]
                  },
                  "legend": { "position": "bottom" },
                  "displayName": "SKU"
                }
              },
              "frame": { "showTitle": true, "title": "Spend By SKU" },
              "mark": { "layout": "stack" }
            }
          },
          "position": { "x": 0, "y": 19, "width": 6, "height": 7 }
        },
        {
          "widget": {
            "name": "13080ba4",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    { "name": "IsServerless", "expression": "`IsServerless`" },
                    {
                      "name": "sum(Dollar_DBUs)",
                      "expression": "SUM(`Dollar_DBUs`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "sum(Dollar_DBUs)",
                  "scale": { "type": "quantitative" },
                  "axis": { "title": "Total Usage ($ DBUs)" },
                  "displayName": "Total Usage ($ DBUs)"
                },
                "color": {
                  "fieldName": "IsServerless",
                  "scale": {
                    "type": "categorical",
                    "mappings": [
                      { "value": "Serverless", "color": "#00A972" },
                      { "value": "Hosted", "color": "#1356d4" }
                    ]
                  },
                  "legend": { "position": "bottom", "title": "Is Serverless" },
                  "displayName": "Is Serverless"
                },
                "label": { "show": true }
              },
              "frame": { "showTitle": true, "title": "Serverless %" },
              "mark": { "layout": "percent-stack" }
            }
          },
          "position": { "x": 0, "y": 9, "width": 2, "height": 4 }
        },
        {
          "widget": {
            "name": "6fb0b7e9",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    { "name": "owned_by", "expression": "`owned_by`" },
                    {
                      "name": "sum(Dollar_DBUs)",
                      "expression": "SUM(`Dollar_DBUs`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "sum(Dollar_DBUs)",
                  "scale": {
                    "type": "quantitative",
                    "fn": { "type": "symlog" }
                  },
                  "axis": { "title": "Usage ($ DBUs)" },
                  "displayName": "Usage (DBUs)"
                },
                "y": {
                  "fieldName": "owned_by",
                  "scale": {
                    "type": "categorical",
                    "sort": { "by": "x-reversed" }
                  },
                  "displayName": "Cluster Owner"
                },
                "color": {
                  "fieldName": "owned_by",
                  "scale": { "type": "categorical" },
                  "displayName": "owned_by"
                }
              },
              "frame": { "showTitle": true, "title": "Usage By Cluster Owner" },
              "mark": { "layout": "stack" }
            }
          },
          "position": { "x": 0, "y": 26, "width": 3, "height": 9 }
        },
        {
          "widget": {
            "name": "957cc7a1",
            "queries": [
              {
                "name": "dashboards/01eeed27c1e41344b1a06cd65ca8285c/datasets/01eeffb505f316c6bd35a4e4a020cee6_owned_by",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    { "name": "owned_by", "expression": "`owned_by`" },
                    {
                      "name": "owned_by_associativity",
                      "expression": "COUNT_IF(`associative_filter_predicate_group`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "filter-multi-select",
              "encodings": {
                "fields": [
                  {
                    "fieldName": "owned_by",
                    "displayName": "owned_by",
                    "queryName": "dashboards/01eeed27c1e41344b1a06cd65ca8285c/datasets/01eeffb505f316c6bd35a4e4a020cee6_owned_by"
                  }
                ]
              },
              "frame": { "showTitle": true, "title": "Owned By" }
            }
          },
          "position": { "x": 4, "y": 2, "width": 1, "height": 2 }
        },
        {
          "widget": {
            "name": "2323a096",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    {
                      "name": "billing_origin_product",
                      "expression": "`billing_origin_product`"
                    },
                    {
                      "name": "clean_cluster_id",
                      "expression": "`clean_cluster_id`"
                    },
                    {
                      "name": "sum(Dollar_DBUs)",
                      "expression": "SUM(`Dollar_DBUs`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "sum(Dollar_DBUs)",
                  "scale": {
                    "type": "quantitative",
                    "fn": { "type": "symlog" }
                  },
                  "displayName": "Usage ($ DBUs)"
                },
                "y": {
                  "fieldName": "clean_cluster_id",
                  "scale": {
                    "type": "categorical",
                    "sort": { "by": "x-reversed" }
                  },
                  "displayName": "Cluster / Warehouse Id"
                },
                "color": {
                  "fieldName": "billing_origin_product",
                  "scale": { "type": "categorical" },
                  "displayName": "Cluster Type"
                }
              },
              "frame": { "showTitle": true, "title": "Usage By Cluster Id" }
            }
          },
          "position": { "x": 3, "y": 26, "width": 3, "height": 17 }
        },
        {
          "widget": {
            "name": "685c36a5",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    { "name": "sku_name", "expression": "`sku_name`" },
                    {
                      "name": "worker_node_type",
                      "expression": "`worker_node_type`"
                    },
                    {
                      "name": "sum(Dollar_DBUs)",
                      "expression": "SUM(`Dollar_DBUs`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "worker_node_type",
                  "scale": {
                    "type": "categorical",
                    "sort": { "by": "y-reversed" }
                  },
                  "displayName": "worker_node_type"
                },
                "y": {
                  "fieldName": "sum(Dollar_DBUs)",
                  "scale": { "type": "quantitative" },
                  "axis": { "title": "Usage ($ DBUs)" },
                  "displayName": "Usage (DBUs)"
                },
                "color": {
                  "fieldName": "sku_name",
                  "scale": { "type": "categorical" },
                  "displayName": "sku_name"
                }
              },
              "frame": { "showTitle": true, "title": "Usage By Instance Type" }
            }
          },
          "position": { "x": 0, "y": 35, "width": 3, "height": 8 }
        },
        {
          "widget": {
            "name": "3948e9b7",
            "textbox_spec": "## Compute Tagging Manager\n-----\nThis section helps define a tagging policy system, group analysis by that tagging framework, and audit non-compliance to a given tagging architecture for enterprise observability"
          },
          "position": { "x": 0, "y": 67, "width": 6, "height": 2 }
        },
        {
          "widget": {
            "name": "5a9c8ea2",
            "queries": [
              {
                "name": "parameter_dashboards/01ef124f648b1ded95f018af2428da72/datasets/01ef124f648f1616b9a44d23eae6b3e8_tagging_raw_architecture",
                "query": {
                  "datasetName": "aa460ccc",
                  "parameters": [
                    {
                      "name": "tagging_raw_architecture",
                      "keyword": "tagging_raw_architecture"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "filter-single-select",
              "encodings": {
                "fields": [
                  {
                    "parameterName": "tagging_raw_architecture",
                    "queryName": "parameter_dashboards/01ef124f648b1ded95f018af2428da72/datasets/01ef124f648f1616b9a44d23eae6b3e8_tagging_raw_architecture"
                  }
                ]
              },
              "frame": {
                "showTitle": true,
                "title": "Dynamic Tagging Policy",
                "showDescription": true,
                "description": "Define a tagging architecture here in the format of \nkey1=value1;key2=value2 (values are optional). If values are povided, this also enforces the provided values. \n\nFrom this, the visuals in this section will identify which clusters/jobs enforce this policy so you can see usage by this tagging architecture as well as identify improperly tagged clusters/jobs. (for single tag keys, do not include ;)"
              }
            }
          },
          "position": { "x": 0, "y": 71, "width": 2, "height": 4 }
        },
        {
          "widget": {
            "name": "8ad1b494",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    {
                      "name": "IsTaggingCompliant",
                      "expression": "`IsTaggingCompliant`"
                    },
                    {
                      "name": "daily(usage_date)",
                      "expression": "DATE_TRUNC(\"DAY\", `usage_date`)"
                    },
                    {
                      "name": "sum(Dollar_DBUs)",
                      "expression": "SUM(`Dollar_DBUs`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "daily(usage_date)",
                  "scale": { "type": "temporal" },
                  "displayName": "usage_date"
                },
                "y": {
                  "fieldName": "sum(Dollar_DBUs)",
                  "scale": { "type": "quantitative" },
                  "axis": { "title": "Usage ($ DBUs)" },
                  "displayName": "Usage (DBUs)"
                },
                "color": {
                  "fieldName": "IsTaggingCompliant",
                  "scale": {
                    "type": "categorical",
                    "mappings": [
                      {
                        "value": "Not Compliant To Tag Policy",
                        "color": "#FF3621"
                      },
                      { "value": "Compliant", "color": "#00A972" }
                    ]
                  },
                  "legend": {
                    "title": "Tag Policy Compliance",
                    "position": "bottom"
                  },
                  "displayName": "Tag Policy Compliance"
                }
              },
              "frame": { "showTitle": true, "title": "Usage By Compliance" }
            }
          },
          "position": { "x": 0, "y": 75, "width": 6, "height": 6 }
        },
        {
          "widget": {
            "name": "9803ff23",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    {
                      "name": "IsTaggingCompliant",
                      "expression": "`IsTaggingCompliant`"
                    },
                    {
                      "name": "countdistinct(clean_cluster_id)",
                      "expression": "COUNT(DISTINCT `clean_cluster_id`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "countdistinct(clean_cluster_id)",
                  "scale": { "type": "quantitative" },
                  "displayName": "Cluster Ids"
                },
                "color": {
                  "fieldName": "IsTaggingCompliant",
                  "scale": {
                    "type": "categorical",
                    "mappings": [
                      {
                        "value": "Not Compliant To Tag Policy",
                        "color": "#FF3621"
                      },
                      { "value": "Compliant", "color": "#00A972" }
                    ]
                  },
                  "displayName": "Tag Policy Compliance"
                },
                "label": { "show": true }
              },
              "frame": { "showTitle": true, "title": "Clusters By Compliance" },
              "mark": { "layout": "percent-stack" }
            }
          },
          "position": { "x": 4, "y": 69, "width": 2, "height": 6 }
        },
        {
          "widget": {
            "name": "50eba266",
            "queries": [
              {
                "name": "dashboards/01ef02691c7d1117911c501cc8d148c7/datasets/01ef02691c8618c7bfb8f1eb063dd20d_IsTaggingCompliant",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    {
                      "name": "IsTaggingCompliant",
                      "expression": "`IsTaggingCompliant`"
                    },
                    {
                      "name": "IsTaggingCompliant_associativity",
                      "expression": "COUNT_IF(`associative_filter_predicate_group`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "filter-multi-select",
              "encodings": {
                "fields": [
                  {
                    "fieldName": "IsTaggingCompliant",
                    "displayName": "IsTaggingCompliant",
                    "queryName": "dashboards/01ef02691c7d1117911c501cc8d148c7/datasets/01ef02691c8618c7bfb8f1eb063dd20d_IsTaggingCompliant"
                  }
                ]
              },
              "frame": {
                "showTitle": true,
                "title": "Is Compliant to Tag Policy?",
                "showDescription": false,
                "description": ""
              }
            }
          },
          "position": { "x": 0, "y": 69, "width": 1, "height": 2 }
        },
        {
          "widget": {
            "name": "892f070f",
            "queries": [
              {
                "name": "dashboards/01ef02691c7d1117911c501cc8d148c7/datasets/01ef02691c8618c7bfb8f1eb063dd20d_MissingTagKeys",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    {
                      "name": "MissingTagKeys",
                      "expression": "`MissingTagKeys`"
                    },
                    {
                      "name": "MissingTagKeys_associativity",
                      "expression": "COUNT_IF(`associative_filter_predicate_group`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "filter-multi-select",
              "encodings": {
                "fields": [
                  {
                    "fieldName": "MissingTagKeys",
                    "displayName": "MissingTagKeys",
                    "queryName": "dashboards/01ef02691c7d1117911c501cc8d148c7/datasets/01ef02691c8618c7bfb8f1eb063dd20d_MissingTagKeys"
                  }
                ]
              },
              "frame": {
                "showTitle": true,
                "title": "Missing Tag Keys",
                "showDescription": false,
                "description": "Define tag policy below"
              }
            }
          },
          "position": { "x": 1, "y": 69, "width": 1, "height": 2 }
        },
        {
          "widget": {
            "name": "b96b3768",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    {
                      "name": "CompliantValues",
                      "expression": "`CompliantValues`"
                    },
                    {
                      "name": "daily(usage_date)",
                      "expression": "DATE_TRUNC(\"DAY\", `usage_date`)"
                    },
                    {
                      "name": "sum(Dollar_DBUs)",
                      "expression": "SUM(`Dollar_DBUs`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "daily(usage_date)",
                  "scale": { "type": "temporal" },
                  "displayName": "usage_date"
                },
                "y": {
                  "fieldName": "sum(Dollar_DBUs)",
                  "scale": { "type": "quantitative" },
                  "axis": { "title": "Usage ($ DBUs)" },
                  "displayName": "Usage (DBUs)"
                },
                "color": {
                  "fieldName": "CompliantValues",
                  "scale": {
                    "type": "categorical",
                    "mappings": [
                      { "value": "", "color": "#919191" },
                      { "value": "demo_project", "color": "#1461df" }
                    ]
                  },
                  "legend": {
                    "title": "Tag Key Values (values of all tag keys in policy)"
                  },
                  "displayName": "Tag Keys"
                }
              },
              "frame": { "showTitle": true, "title": "Usage By Tag Values" }
            }
          },
          "position": { "x": 0, "y": 81, "width": 6, "height": 6 }
        },
        {
          "widget": {
            "name": "29af087e",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    { "name": "count(*)", "expression": "COUNT(`*`)" },
                    {
                      "name": "IsTaggingCompliant",
                      "expression": "`IsTaggingCompliant`"
                    },
                    { "name": "sku_name", "expression": "`sku_name`" },
                    {
                      "name": "clean_cluster_id",
                      "expression": "`clean_cluster_id`"
                    },
                    {
                      "name": "clean_job_or_pipeline_id",
                      "expression": "`clean_job_or_pipeline_id`"
                    },
                    { "name": "owned_by", "expression": "`owned_by`" },
                    {
                      "name": "identity_metadata",
                      "expression": "`identity_metadata`"
                    },
                    {
                      "name": "CompliantValues",
                      "expression": "`CompliantValues`"
                    },
                    {
                      "name": "MissingTagKeys",
                      "expression": "`MissingTagKeys`"
                    }
                  ],
                  "disaggregated": false,
                  "orders": [
                    { "direction": "ASC", "expression": "`clean_cluster_id`" },
                    {
                      "direction": "ASC",
                      "expression": "`clean_job_or_pipeline_id`"
                    },
                    { "direction": "ASC", "expression": "`owned_by`" },
                    { "direction": "ASC", "expression": "`identity_metadata`" },
                    { "direction": "ASC", "expression": "`CompliantValues`" },
                    { "direction": "ASC", "expression": "`MissingTagKeys`" },
                    {
                      "direction": "ASC",
                      "expression": "`IsTaggingCompliant`"
                    },
                    { "direction": "ASC", "expression": "`sku_name`" }
                  ]
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "pivot",
              "encodings": {
                "rows": [
                  {
                    "fieldName": "clean_cluster_id",
                    "displayName": "clean_cluster_id"
                  },
                  {
                    "fieldName": "clean_job_or_pipeline_id",
                    "displayName": "clean_job_or_pipeline_id"
                  },
                  { "fieldName": "owned_by", "displayName": "owned_by" },
                  {
                    "fieldName": "identity_metadata",
                    "displayName": "identity_metadata"
                  },
                  {
                    "fieldName": "CompliantValues",
                    "displayName": "CompliantValues"
                  },
                  {
                    "fieldName": "MissingTagKeys",
                    "displayName": "MissingTagKeys"
                  }
                ],
                "columns": [
                  {
                    "fieldName": "IsTaggingCompliant",
                    "displayName": "IsTaggingCompliant"
                  },
                  { "fieldName": "sku_name", "displayName": "sku_name" }
                ],
                "cell": {
                  "fieldName": "count(*)",
                  "cellType": "text",
                  "displayName": "Count of Records"
                }
              },
              "frame": {
                "showTitle": true,
                "title": "Clusters & Jobs/DLT pipelines By Compliance",
                "showDescription": true,
                "description": "Pivot Table / Report To Identify Untagged Clusters / Jobs that do not adhere to the defined tagging policy (value is the count of billing record hours)"
              }
            }
          },
          "position": { "x": 0, "y": 87, "width": 6, "height": 7 }
        },
        {
          "widget": {
            "name": "e004e4fa",
            "queries": [
              {
                "name": "dashboards/01eeed27c1e41344b1a06cd65ca8285c/datasets/01eeffb505f316c6bd35a4e4a020cee6_clean_cluster_id",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    {
                      "name": "clean_cluster_id",
                      "expression": "`clean_cluster_id`"
                    },
                    {
                      "name": "clean_cluster_id_associativity",
                      "expression": "COUNT_IF(`associative_filter_predicate_group`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "filter-multi-select",
              "encodings": {
                "fields": [
                  {
                    "fieldName": "clean_cluster_id",
                    "displayName": "clean_cluster_id",
                    "queryName": "dashboards/01eeed27c1e41344b1a06cd65ca8285c/datasets/01eeffb505f316c6bd35a4e4a020cee6_clean_cluster_id"
                  }
                ]
              },
              "frame": { "showTitle": true, "title": "Cluster / Warehouse Id" }
            }
          },
          "position": { "x": 2, "y": 4, "width": 2, "height": 2 }
        },
        {
          "widget": {
            "name": "0e03f756",
            "queries": [
              {
                "name": "dashboards/01eeed27c1e41344b1a06cd65ca8285c/datasets/01eeffb505f316c6bd35a4e4a020cee6_clean_job_or_pipeline_id",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    {
                      "name": "clean_job_or_pipeline_id",
                      "expression": "`clean_job_or_pipeline_id`"
                    },
                    {
                      "name": "clean_job_or_pipeline_id_associativity",
                      "expression": "COUNT_IF(`associative_filter_predicate_group`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "filter-multi-select",
              "encodings": {
                "fields": [
                  {
                    "fieldName": "clean_job_or_pipeline_id",
                    "displayName": "clean_job_or_pipeline_id",
                    "queryName": "dashboards/01eeed27c1e41344b1a06cd65ca8285c/datasets/01eeffb505f316c6bd35a4e4a020cee6_clean_job_or_pipeline_id"
                  }
                ]
              },
              "frame": { "showTitle": true, "title": "Job / Pipeline Id" }
            }
          },
          "position": { "x": 4, "y": 4, "width": 2, "height": 2 }
        },
        {
          "widget": {
            "name": "c24bac72",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    {
                      "name": "sum(Dollar_DBUs)",
                      "expression": "SUM(`Dollar_DBUs`)"
                    },
                    {
                      "name": "sum(usage_quantity)",
                      "expression": "SUM(`usage_quantity`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "counter",
              "encodings": {
                "value": {
                  "fieldName": "sum(Dollar_DBUs)",
                  "displayName": "Sum of Dollar_DBUs"
                },
                "target": {
                  "fieldName": "sum(usage_quantity)",
                  "displayName": "Sum of usage_quantity"
                }
              },
              "frame": {
                "showTitle": true,
                "title": "Total Usage In Period - $DBUs",
                "showDescription": true,
                "description": "(DBUs)"
              }
            }
          },
          "position": { "x": 0, "y": 6, "width": 1, "height": 3 }
        },
        {
          "widget": {
            "name": "d19f38da",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    {
                      "name": "IsTaggingCompliant",
                      "expression": "`IsTaggingCompliant`"
                    },
                    {
                      "name": "sum(Dollar_DBUs)",
                      "expression": "SUM(`Dollar_DBUs`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "sum(Dollar_DBUs)",
                  "scale": { "type": "quantitative" },
                  "axis": { "title": "$DBUs" },
                  "displayName": "Cluster Ids"
                },
                "color": {
                  "fieldName": "IsTaggingCompliant",
                  "scale": {
                    "type": "categorical",
                    "mappings": [
                      {
                        "value": "Not Compliant To Tag Policy",
                        "color": "#FF3621"
                      },
                      { "value": "Compliant", "color": "#00A972" }
                    ]
                  },
                  "displayName": "Tag Policy Compliance"
                },
                "label": { "show": true }
              },
              "frame": { "showTitle": true, "title": "$ DBUs By Compliance" },
              "mark": { "layout": "percent-stack" }
            }
          },
          "position": { "x": 2, "y": 69, "width": 2, "height": 6 }
        },
        {
          "widget": {
            "name": "c2d62bcf",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    {
                      "name": "billing_origin_product",
                      "expression": "`billing_origin_product`"
                    },
                    {
                      "name": "sum(Dollar_DBUs)",
                      "expression": "SUM(`Dollar_DBUs`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "sum(Dollar_DBUs)",
                  "scale": { "type": "quantitative" },
                  "axis": { "title": "Total Usage ($ DBUs)" },
                  "displayName": "Total Usage ($ DBUs)"
                },
                "y": {
                  "fieldName": "billing_origin_product",
                  "scale": {
                    "type": "categorical",
                    "sort": { "by": "x-reversed" }
                  },
                  "displayName": "Product Category"
                },
                "color": {
                  "fieldName": "billing_origin_product",
                  "scale": {
                    "type": "categorical",
                    "mappings": [{ "value": "ALL_PURPOSE", "color": "#0f4ad3" }]
                  },
                  "displayName": "billing_origin_product"
                },
                "label": { "show": true }
              },
              "frame": {
                "showTitle": true,
                "title": "Total Spend By Product Category"
              }
            }
          },
          "position": { "x": 4, "y": 6, "width": 2, "height": 7 }
        },
        {
          "widget": {
            "name": "208c2445",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    {
                      "name": "countdistinct(clean_workspace_id)",
                      "expression": "COUNT(DISTINCT `clean_workspace_id`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "counter",
              "encodings": {
                "value": {
                  "fieldName": "countdistinct(clean_workspace_id)",
                  "displayName": "Count of Unique clean_workspace_id"
                }
              },
              "frame": {
                "showTitle": true,
                "title": "Workspace Count",
                "showDescription": false,
                "description": ""
              }
            }
          },
          "position": { "x": 1, "y": 6, "width": 1, "height": 3 }
        },
        {
          "widget": {
            "name": "d719912b",
            "queries": [
              {
                "name": "dashboards/01eeed27c1e41344b1a06cd65ca8285c/datasets/01eeffb505f316c6bd35a4e4a020cee6_clean_workspace_id",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    {
                      "name": "clean_workspace_id",
                      "expression": "`clean_workspace_id`"
                    },
                    {
                      "name": "clean_workspace_id_associativity",
                      "expression": "COUNT_IF(`associative_filter_predicate_group`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "filter-multi-select",
              "encodings": {
                "fields": [
                  {
                    "fieldName": "clean_workspace_id",
                    "displayName": "clean_workspace_id",
                    "queryName": "dashboards/01eeed27c1e41344b1a06cd65ca8285c/datasets/01eeffb505f316c6bd35a4e4a020cee6_clean_workspace_id"
                  }
                ]
              },
              "frame": { "showTitle": true, "title": "Workspace Id" }
            }
          },
          "position": { "x": 0, "y": 4, "width": 2, "height": 2 }
        },
        {
          "widget": {
            "name": "69039595",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "aa460ccc",
                  "fields": [
                    {
                      "name": "clean_workspace_id",
                      "expression": "`clean_workspace_id`"
                    },
                    {
                      "name": "sum(Dollar_DBUs)",
                      "expression": "SUM(`Dollar_DBUs`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "sum(Dollar_DBUs)",
                  "scale": { "type": "quantitative", "reverse": false },
                  "axis": { "title": "Total Usage ($ DBUs)" },
                  "displayName": "Total Usage ($ DBUs)"
                },
                "y": {
                  "fieldName": "clean_workspace_id",
                  "displayName": "Workspace Id",
                  "scale": {
                    "type": "categorical",
                    "sort": { "by": "x-reversed" }
                  }
                },
                "color": {
                  "fieldName": "clean_workspace_id",
                  "scale": {
                    "type": "categorical",
                    "mappings": [
                      { "value": "Serverless", "color": "#00A972" },
                      { "value": "Hosted", "color": "#1356d4" }
                    ]
                  },
                  "legend": { "position": "bottom", "title": "Workspace" },
                  "displayName": "SKU Category"
                },
                "label": { "show": true }
              },
              "frame": {
                "showTitle": true,
                "title": "Total Spend By Workspace"
              },
              "mark": { "layout": "group" }
            }
          },
          "position": { "x": 2, "y": 6, "width": 2, "height": 7 }
        },
        {
          "widget": {
            "name": "1e67f20a",
            "textbox_spec": "-----\n## Trending Workload Dashbaord with Trailing and Moving Averages For Usage with Dynamic Filters\n-----"
          },
          "position": { "x": 0, "y": 94, "width": 6, "height": 2 }
        },
        {
          "widget": {
            "name": "41f9eb61",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "52aae459",
                  "fields": [
                    {
                      "name": "daily(usage_date)",
                      "expression": "DATE_TRUNC(\"DAY\", `usage_date`)"
                    },
                    { "name": "sum(avg_30d)", "expression": "SUM(`avg_30d`)" },
                    {
                      "name": "sum(avg_365d)",
                      "expression": "SUM(`avg_365d`)"
                    },
                    { "name": "sum(avg_7d)", "expression": "SUM(`avg_7d`)" },
                    { "name": "sum(avg_90d)", "expression": "SUM(`avg_90d`)" }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "line",
              "encodings": {
                "x": {
                  "fieldName": "daily(usage_date)",
                  "scale": { "type": "temporal" },
                  "displayName": "usage_date"
                },
                "y": {
                  "scale": { "type": "quantitative" },
                  "fields": [
                    {
                      "fieldName": "sum(avg_7d)",
                      "displayName": "7d Moving Average"
                    },
                    {
                      "fieldName": "sum(avg_30d)",
                      "displayName": "30d Moving Average"
                    },
                    {
                      "fieldName": "sum(avg_90d)",
                      "displayName": "90d Moving Average"
                    },
                    {
                      "fieldName": "sum(avg_365d)",
                      "displayName": "365d Moving Average"
                    }
                  ],
                  "axis": { "title": "Usage $ DBUs" }
                }
              },
              "frame": {
                "showTitle": true,
                "title": "Usage Momentum Moving Averages (7d, 30d, 90d, 365d)"
              }
            }
          },
          "position": { "x": 0, "y": 101, "width": 6, "height": 7 }
        },
        {
          "widget": {
            "name": "6c307202",
            "queries": [
              {
                "name": "parameter_dashboards/01ef124f648b1ded95f018af2428da72/datasets/01ef124f649e1148a56618a6b0d8a319_tagging_raw_architecture",
                "query": {
                  "datasetName": "e81fb342",
                  "parameters": [
                    {
                      "name": "tagging_raw_architecture",
                      "keyword": "tagging_raw_architecture"
                    }
                  ],
                  "disaggregated": false
                }
              },
              {
                "name": "parameter_dashboards/01ef124f648b1ded95f018af2428da72/datasets/01ef124f649b101a9efd5f8e4700556c_tagging_raw_architecture",
                "query": {
                  "datasetName": "52aae459",
                  "parameters": [
                    {
                      "name": "tagging_raw_architecture",
                      "keyword": "tagging_raw_architecture"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "filter-single-select",
              "encodings": {
                "fields": [
                  {
                    "parameterName": "tagging_raw_architecture",
                    "queryName": "parameter_dashboards/01ef124f648b1ded95f018af2428da72/datasets/01ef124f649e1148a56618a6b0d8a319_tagging_raw_architecture"
                  },
                  {
                    "parameterName": "tagging_raw_architecture",
                    "queryName": "parameter_dashboards/01ef124f648b1ded95f018af2428da72/datasets/01ef124f649b101a9efd5f8e4700556c_tagging_raw_architecture"
                  }
                ]
              },
              "frame": {
                "showTitle": true,
                "showDescription": true,
                "title": "Tagging Dynamic Filter",
                "description": "Define a tagging filter here in the format of \nkey1=value1;key2=value2 (values are optional)"
              }
            }
          },
          "position": { "x": 0, "y": 96, "width": 2, "height": 2 }
        },
        {
          "widget": {
            "name": "0ac8bc97",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "52aae459",
                  "fields": [
                    {
                      "name": "sum(DollarDBUs)",
                      "expression": "SUM(`DollarDBUs`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "counter",
              "encodings": {
                "value": {
                  "fieldName": "sum(DollarDBUs)",
                  "displayName": "Sum of DollarDBUs"
                }
              },
              "frame": {
                "showTitle": true,
                "showDescription": false,
                "title": "Total Usage ($ DBU)"
              }
            }
          },
          "position": { "x": 1, "y": 98, "width": 1, "height": 3 }
        },
        {
          "widget": {
            "name": "2ee1fcd7",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "e81fb342",
                  "fields": [
                    {
                      "name": "max(DailyAvgT7D)",
                      "expression": "MAX(`DailyAvgT7D`)"
                    },
                    {
                      "name": "max(T7D_Dollars)",
                      "expression": "MAX(`T7D_Dollars`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "counter",
              "encodings": {
                "value": {
                  "fieldName": "max(T7D_Dollars)",
                  "displayName": "Maximum T7D_Dollars"
                },
                "target": {
                  "fieldName": "max(DailyAvgT7D)",
                  "displayName": "Maximum DailyAvgT7D"
                }
              },
              "frame": {
                "showTitle": true,
                "showDescription": true,
                "title": "T7D $ DBUs",
                "description": "(Daily Avg in T7D)"
              }
            }
          },
          "position": { "x": 2, "y": 98, "width": 1, "height": 3 }
        },
        {
          "widget": {
            "name": "b73331fa",
            "queries": [
              {
                "name": "parameter_dashboards/01ef124f648b1ded95f018af2428da72/datasets/01ef124f649b101a9efd5f8e4700556c_usage_start",
                "query": {
                  "datasetName": "52aae459",
                  "parameters": [
                    { "name": "usage_start", "keyword": "usage_start" }
                  ],
                  "disaggregated": false
                }
              },
              {
                "name": "parameter_dashboards/01ef124f648b1ded95f018af2428da72/datasets/01ef124f649e1148a56618a6b0d8a319_usage_start",
                "query": {
                  "datasetName": "e81fb342",
                  "parameters": [
                    { "name": "usage_start", "keyword": "usage_start" }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "filter-date-picker",
              "encodings": {
                "fields": [
                  {
                    "parameterName": "usage_start",
                    "queryName": "parameter_dashboards/01ef124f648b1ded95f018af2428da72/datasets/01ef124f649b101a9efd5f8e4700556c_usage_start"
                  },
                  {
                    "parameterName": "usage_start",
                    "queryName": "parameter_dashboards/01ef124f648b1ded95f018af2428da72/datasets/01ef124f649e1148a56618a6b0d8a319_usage_start"
                  }
                ]
              },
              "frame": { "showTitle": true, "title": "Usage Start" }
            }
          },
          "position": { "x": 2, "y": 96, "width": 2, "height": 2 }
        },
        {
          "widget": {
            "name": "5e80d08a",
            "queries": [
              {
                "name": "parameter_dashboards/01ef02691c7d1117911c501cc8d148c7/datasets/01ef02691c891982b51968cfa5364f95_usage_end",
                "query": {
                  "datasetName": "52aae459",
                  "parameters": [
                    { "name": "usage_end", "keyword": "usage_end" }
                  ],
                  "disaggregated": false
                }
              },
              {
                "name": "parameter_dashboards/01ef02691c7d1117911c501cc8d148c7/datasets/01ef028a8b2b18da9269509bcd612d00_usage_end",
                "query": {
                  "datasetName": "e81fb342",
                  "parameters": [
                    { "name": "usage_end", "keyword": "usage_end" }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "filter-date-picker",
              "encodings": {
                "fields": [
                  {
                    "parameterName": "usage_end",
                    "queryName": "parameter_dashboards/01ef02691c7d1117911c501cc8d148c7/datasets/01ef02691c891982b51968cfa5364f95_usage_end"
                  },
                  {
                    "parameterName": "usage_end",
                    "queryName": "parameter_dashboards/01ef02691c7d1117911c501cc8d148c7/datasets/01ef028a8b2b18da9269509bcd612d00_usage_end"
                  }
                ]
              },
              "frame": { "showTitle": true, "title": "Usage End" }
            }
          },
          "position": { "x": 4, "y": 96, "width": 2, "height": 2 }
        },
        {
          "widget": {
            "name": "4ef5579d",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "e81fb342",
                  "fields": [
                    {
                      "name": "max(DailyAvgT30D)",
                      "expression": "MAX(`DailyAvgT30D`)"
                    },
                    {
                      "name": "max(T30D_Dollars)",
                      "expression": "MAX(`T30D_Dollars`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "counter",
              "encodings": {
                "value": {
                  "fieldName": "max(T30D_Dollars)",
                  "displayName": "Maximum T30D_Dollars"
                },
                "target": {
                  "fieldName": "max(DailyAvgT30D)",
                  "displayName": "Maximum DailyAvgT30D"
                }
              },
              "frame": {
                "showTitle": true,
                "showDescription": true,
                "title": "T30D $ DBUs",
                "description": "(Daily Avg in T30)"
              }
            }
          },
          "position": { "x": 3, "y": 98, "width": 1, "height": 3 }
        },
        {
          "widget": {
            "name": "e0c729ba",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "e81fb342",
                  "fields": [
                    {
                      "name": "max(DailyAvgT365D)",
                      "expression": "MAX(`DailyAvgT365D`)"
                    },
                    {
                      "name": "max(T365D_Dollars)",
                      "expression": "MAX(`T365D_Dollars`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "counter",
              "encodings": {
                "value": {
                  "fieldName": "max(T365D_Dollars)",
                  "displayName": "Maximum T365D_Dollars"
                },
                "target": {
                  "fieldName": "max(DailyAvgT365D)",
                  "displayName": "Maximum DailyAvgT365D"
                }
              },
              "frame": {
                "showTitle": true,
                "showDescription": true,
                "title": "T365D $ DBUs",
                "description": "(Daily Avg In T365D)"
              }
            }
          },
          "position": { "x": 5, "y": 98, "width": 1, "height": 3 }
        },
        {
          "widget": {
            "name": "5f165ee4",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "e81fb342",
                  "fields": [
                    {
                      "name": "max(DailyAvgT90D)",
                      "expression": "MAX(`DailyAvgT90D`)"
                    },
                    {
                      "name": "max(T90D_Dollars)",
                      "expression": "MAX(`T90D_Dollars`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "counter",
              "encodings": {
                "value": {
                  "fieldName": "max(T90D_Dollars)",
                  "displayName": "Maximum T90D_Dollars"
                },
                "target": {
                  "fieldName": "max(DailyAvgT90D)",
                  "displayName": "Maximum DailyAvgT90D"
                }
              },
              "frame": {
                "showTitle": true,
                "showDescription": true,
                "title": "T90D $ DBUs",
                "description": "(Daily Avg In T90D)"
              }
            }
          },
          "position": { "x": 4, "y": 98, "width": 1, "height": 3 }
        },
        {
          "widget": {
            "name": "180b21ea",
            "queries": [
              {
                "name": "parameter_dashboards/01ef124f648b1ded95f018af2428da72/datasets/01ef124f649b101a9efd5f8e4700556c_product_category",
                "query": {
                  "datasetName": "52aae459",
                  "parameters": [
                    {
                      "name": "product_category",
                      "keyword": "product_category"
                    }
                  ],
                  "disaggregated": false
                }
              },
              {
                "name": "parameter_dashboards/01ef124f648b1ded95f018af2428da72/datasets/01ef124f649e1148a56618a6b0d8a319_product_category",
                "query": {
                  "datasetName": "e81fb342",
                  "parameters": [
                    {
                      "name": "product_category",
                      "keyword": "product_category"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "filter-single-select",
              "encodings": {
                "fields": [
                  {
                    "parameterName": "product_category",
                    "queryName": "parameter_dashboards/01ef124f648b1ded95f018af2428da72/datasets/01ef124f649b101a9efd5f8e4700556c_product_category"
                  },
                  {
                    "parameterName": "product_category",
                    "queryName": "parameter_dashboards/01ef124f648b1ded95f018af2428da72/datasets/01ef124f649e1148a56618a6b0d8a319_product_category"
                  }
                ]
              },
              "frame": {
                "showTitle": true,
                "showDescription": true,
                "title": "Product Category Filter",
                "description": "Shows which product category(s) you want to view *If left blank or 'all', then no filter will be applied"
              }
            }
          },
          "position": { "x": 0, "y": 98, "width": 1, "height": 3 }
        },
        {
          "widget": {
            "name": "f3d8d377",
            "textbox_spec": "## Contract Burndown Monitor\n-----\nThis section allows users to input contract dates, and amount to track usage during a specific contract time window. This helps estimate \"high usage\" time periods and get a sense for what proportion of your contract is used relative to the date of refresh. "
          },
          "position": { "x": 0, "y": 43, "width": 6, "height": 2 }
        },
        {
          "widget": {
            "name": "cefac825",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "1e90a94f",
                  "fields": [
                    {
                      "name": "daily(usage_date)",
                      "expression": "DATE_TRUNC(\"DAY\", `usage_date`)"
                    },
                    {
                      "name": "sum(daily_amount)",
                      "expression": "SUM(`daily_amount`)"
                    },
                    {
                      "name": "sum(DollarDBUs)",
                      "expression": "SUM(`DollarDBUs`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "line",
              "encodings": {
                "x": {
                  "fieldName": "daily(usage_date)",
                  "scale": { "type": "temporal" },
                  "axis": { "title": "Usage Date" },
                  "displayName": "Usage Date"
                },
                "y": {
                  "scale": { "type": "quantitative" },
                  "fields": [
                    {
                      "fieldName": "sum(daily_amount)",
                      "displayName": "Estimated Daily Spend"
                    },
                    {
                      "fieldName": "sum(DollarDBUs)",
                      "displayName": "Actual Daily Spend"
                    }
                  ],
                  "axis": { "title": "Spend ($)" }
                }
              },
              "frame": {
                "showTitle": true,
                "title": "Spend Over Time (Not Cumulative) - Actual vs Estimated (Linear by TCV)"
              },
              "mark": {
                "colors": [
                  "#077A9D",
                  "#00A972",
                  "#00A972",
                  "#FF3621",
                  "#8BCAE7",
                  "#AB4057",
                  "#99DDB4",
                  "#FCA4A1",
                  "#919191",
                  "#BF7080"
                ]
              }
            }
          },
          "position": { "x": 0, "y": 61, "width": 6, "height": 6 }
        },
        {
          "widget": {
            "name": "b13d77d3",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "1e90a94f",
                  "fields": [
                    {
                      "name": "max(total_contract_amount)",
                      "expression": "MAX(`total_contract_amount`)"
                    },
                    {
                      "name": "sum(DollarDBUs)",
                      "expression": "SUM(`DollarDBUs`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "counter",
              "encodings": {
                "value": {
                  "fieldName": "sum(DollarDBUs)",
                  "displayName": "Sum of DollarDBUs"
                },
                "target": {
                  "fieldName": "max(total_contract_amount)",
                  "displayName": "Maximum total_contract_amount"
                }
              },
              "frame": {
                "showTitle": true,
                "title": "Total Usage In Period ($)",
                "showDescription": true,
                "description": "(Total Contract Value $)"
              }
            }
          },
          "position": { "x": 0, "y": 47, "width": 2, "height": 2 }
        },
        {
          "widget": {
            "name": "6a1249c0",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "1e90a94f",
                  "fields": [
                    {
                      "name": "daily(usage_date)",
                      "expression": "DATE_TRUNC(\"DAY\", `usage_date`)"
                    },
                    {
                      "name": "sum(cumulative_actual_spend)",
                      "expression": "SUM(`cumulative_actual_spend`)"
                    },
                    {
                      "name": "sum(cumulative_estimated_contract_usage)",
                      "expression": "SUM(`cumulative_estimated_contract_usage`)"
                    },
                    {
                      "name": "sum(total_contract_amount)",
                      "expression": "SUM(`total_contract_amount`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "line",
              "encodings": {
                "x": {
                  "fieldName": "daily(usage_date)",
                  "scale": { "type": "temporal" },
                  "displayName": "usage_date"
                },
                "y": {
                  "scale": { "type": "quantitative" },
                  "fields": [
                    {
                      "fieldName": "sum(cumulative_actual_spend)",
                      "displayName": "Cumulative Actual Spend"
                    },
                    {
                      "fieldName": "sum(cumulative_estimated_contract_usage)",
                      "displayName": "Cumulative Estimated Spend"
                    },
                    {
                      "fieldName": "sum(total_contract_amount)",
                      "displayName": "Total Contract Value ($)"
                    }
                  ],
                  "axis": { "title": "Spend ($)" }
                }
              },
              "frame": {
                "showTitle": true,
                "title": "Cumulative Usage - Actual vs Estimated (Linear by TCV)"
              },
              "mark": {
                "colors": [
                  "#00A972",
                  "#8BCAE7",
                  "#FF3621",
                  "#FF3621",
                  "#8BCAE7",
                  "#AB4057",
                  "#99DDB4",
                  "#FCA4A1",
                  "#919191",
                  "#BF7080"
                ]
              }
            }
          },
          "position": { "x": 0, "y": 55, "width": 6, "height": 6 }
        },
        {
          "widget": {
            "name": "0851daa8",
            "queries": [
              {
                "name": "parameter_dashboards/01ef02691c7d1117911c501cc8d148c7/datasets/01ef1138435f120eb1609bf24f7752b6_contract_start_date",
                "query": {
                  "datasetName": "1e90a94f",
                  "parameters": [
                    {
                      "name": "contract_start_date",
                      "keyword": "contract_start_date"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "filter-date-picker",
              "encodings": {
                "fields": [
                  {
                    "parameterName": "contract_start_date",
                    "queryName": "parameter_dashboards/01ef02691c7d1117911c501cc8d148c7/datasets/01ef1138435f120eb1609bf24f7752b6_contract_start_date"
                  }
                ]
              },
              "frame": { "showTitle": true, "title": "Contract Start" }
            }
          },
          "position": { "x": 0, "y": 45, "width": 2, "height": 2 }
        },
        {
          "widget": {
            "name": "a2a9d07f",
            "queries": [
              {
                "name": "parameter_dashboards/01ef02691c7d1117911c501cc8d148c7/datasets/01ef1138435f120eb1609bf24f7752b6_contract_end_date",
                "query": {
                  "datasetName": "1e90a94f",
                  "parameters": [
                    {
                      "name": "contract_end_date",
                      "keyword": "contract_end_date"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "filter-date-picker",
              "encodings": {
                "fields": [
                  {
                    "parameterName": "contract_end_date",
                    "queryName": "parameter_dashboards/01ef02691c7d1117911c501cc8d148c7/datasets/01ef1138435f120eb1609bf24f7752b6_contract_end_date"
                  }
                ]
              },
              "frame": { "showTitle": true, "title": "Contract End" }
            }
          },
          "position": { "x": 2, "y": 45, "width": 2, "height": 2 }
        },
        {
          "widget": {
            "name": "0d0dfd8e",
            "queries": [
              {
                "name": "parameter_dashboards/01ef02691c7d1117911c501cc8d148c7/datasets/01ef1138435f120eb1609bf24f7752b6_contract_amount",
                "query": {
                  "datasetName": "1e90a94f",
                  "parameters": [
                    { "name": "contract_amount", "keyword": "contract_amount" }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "filter-single-select",
              "encodings": {
                "fields": [
                  {
                    "parameterName": "contract_amount",
                    "queryName": "parameter_dashboards/01ef02691c7d1117911c501cc8d148c7/datasets/01ef1138435f120eb1609bf24f7752b6_contract_amount"
                  }
                ]
              },
              "frame": {
                "showTitle": true,
                "title": "Contract Total Value ($ TCV)"
              }
            }
          },
          "position": { "x": 4, "y": 45, "width": 2, "height": 2 }
        },
        {
          "widget": {
            "name": "0d20fc7e",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "1e90a94f",
                  "fields": [
                    {
                      "name": "max(MostRecentActualBurnProportion)",
                      "expression": "MAX(`MostRecentActualBurnProportion`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "counter",
              "encodings": {
                "value": {
                  "fieldName": "max(MostRecentActualBurnProportion)",
                  "displayName": "Maximum MostRecentActualBurnProportion"
                }
              },
              "frame": { "showTitle": true, "title": "% Actual Contract Used" }
            }
          },
          "position": { "x": 4, "y": 47, "width": 2, "height": 2 }
        },
        {
          "widget": {
            "name": "e6cacf0d",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "1e90a94f",
                  "fields": [
                    {
                      "name": "max(MostRecentActualBurnProportion)",
                      "expression": "MAX(`MostRecentActualBurnProportion`)"
                    },
                    {
                      "name": "max(MostRecentEstimatedBurnProportion)",
                      "expression": "MAX(`MostRecentEstimatedBurnProportion`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 2,
              "widgetType": "counter",
              "encodings": {
                "value": {
                  "fieldName": "max(MostRecentEstimatedBurnProportion)",
                  "displayName": "Maximum MostRecentEstimatedBurnProportion"
                },
                "target": {
                  "fieldName": "max(MostRecentActualBurnProportion)",
                  "displayName": "Maximum MostRecentActualBurnProportion"
                }
              },
              "frame": {
                "showTitle": true,
                "title": "% Estimated Contract Used (Linear by TCV)",
                "showDescription": true,
                "description": "(Actual %)"
              }
            }
          },
          "position": { "x": 2, "y": 47, "width": 2, "height": 2 }
        },
        {
          "widget": {
            "name": "7df96dad",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "1e90a94f",
                  "fields": [
                    { "name": "BurstFlag", "expression": "`BurstFlag`" },
                    {
                      "name": "sum(DollarDBUs)",
                      "expression": "SUM(`DollarDBUs`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "y": {
                  "fieldName": "sum(DollarDBUs)",
                  "scale": { "type": "quantitative" },
                  "displayName": "Sum of DollarDBUs"
                },
                "color": {
                  "fieldName": "BurstFlag",
                  "scale": {
                    "type": "categorical",
                    "mappings": [
                      { "value": "Burst Usage", "color": "#FF3621" },
                      { "value": "Within Contract", "color": "#00A972" }
                    ]
                  },
                  "displayName": "Usage Type"
                },
                "label": { "show": true }
              },
              "frame": {
                "showTitle": true,
                "title": "Contract Pacing",
                "showDescription": false,
                "description": ""
              }
            }
          },
          "position": { "x": 0, "y": 49, "width": 1, "height": 6 }
        },
        {
          "widget": {
            "name": "0e7361c0",
            "queries": [
              {
                "name": "main_query",
                "query": {
                  "datasetName": "1e90a94f",
                  "fields": [
                    { "name": "BurstFlag", "expression": "`BurstFlag`" },
                    {
                      "name": "daily(usage_date)",
                      "expression": "DATE_TRUNC(\"DAY\", `usage_date`)"
                    },
                    {
                      "name": "sum(cumulative_actual_spend)",
                      "expression": "SUM(`cumulative_actual_spend`)"
                    }
                  ],
                  "disaggregated": false
                }
              }
            ],
            "spec": {
              "version": 3,
              "widgetType": "bar",
              "encodings": {
                "x": {
                  "fieldName": "daily(usage_date)",
                  "scale": { "type": "temporal" },
                  "displayName": "usage_date"
                },
                "y": {
                  "fieldName": "sum(cumulative_actual_spend)",
                  "scale": { "type": "quantitative" },
                  "displayName": "Sum of cumulative_actual_spend"
                },
                "color": {
                  "fieldName": "BurstFlag",
                  "scale": {
                    "type": "categorical",
                    "mappings": [
                      { "value": "Burst Usage", "color": "#FF3621" },
                      { "value": "Within Contract", "color": "#00A972" }
                    ]
                  },
                  "displayName": "Usage Type"
                },
                "label": { "show": false }
              },
              "frame": {
                "showTitle": true,
                "title": "Contract Burst Chart",
                "showDescription": true,
                "description": "Shows cumulative usage by whether usage has burst over contract"
              }
            }
          },
          "position": { "x": 1, "y": 49, "width": 5, "height": 6 }
        }
      ]
    }
  ]
}
